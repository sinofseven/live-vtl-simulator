{"text":"import { readFileSync } from \"node:fs\";\nimport velocityjs from \"velocityjs\";\n\nfunction main() {\n  const data = loadData();\n  if (data.error_message != null) {\n    const response = {\n      tab: \"failed to load data\",\n      text: data.error_message,\n      isError: true,\n    };\n    console.log(JSON.stringify(response));\n    return;\n  }\n\n  const template = loadTemplate();\n  if (template.isError) {\n    const response = { tab: \"failed to load template\", ...template };\n    console.log(JSON.stringify(response));\n  }\n\n  try {\n    const response = {\n      tab: \"Result\",\n      text: new velocityjs.Compile(velocityjs.parse(template.text)).render(\n        data.data,\n      ),\n      isError: false,\n    };\n    console.log(JSON.stringify(response));\n  } catch (e) {\n    const response = {\n      tab: \"failed to render by velocity\",\n      text: e.stack,\n      isError: true,\n    };\n  }\n}\n\n/**\n * @return {{data: Object, error_message: string | null}}\n */\nfunction loadData() {\n  try {\n    const text = readFileSync(\"data.json\").toString();\n    return {\n      data: JSON.parse(text),\n      error_message: null,\n    };\n  } catch (e) {\n    return {\n      data: null,\n      error_message: e.stack,\n    };\n  }\n}\n\n/**\n * @return {{text: string, isError: boolean}}\n */\nfunction loadTemplate() {\n  try {\n    return {\n      text: readFileSync(\"template.vtl\").toString(),\n      isError: false,\n    };\n  } catch (e) {\n    return {\n      text: e.stack,\n      isError: true,\n    };\n  }\n}\n\nmain();\n"}